1. 깊은 복사 방식
-------------------------------------
깊은 복사 방식: 5
계속하려면 아무 키나 누르십시오 . . .
-------------------------------------

2. 얕은 복사 방식
-------------------------------------
얕은 복사 방식: -9999
계속하려면 아무 키나 누르십시오 . . .

-------------------------------------


일단 깊은복사나 얕은 복사나 f()함수에서의 stack에는 main의 stack과는
다른 size와 top을 가지고 있다. 그래서 f()에서의 stack은 두번 pop을
했기 때문에 top은 3을 가리키고 있다. 하지만 main에서의 stk는 pop()을
한적이 없기 때문에 top은 변함없이 맨 위에 것을 가리켜 stk.pop(z)를
실행할경우 맨위의 값을 꺼내온다.

다른점은 일단 깊은복사에서는 f()함수에서 stack객체는 main의
stack객체와는 다르게 따로 생성된다. 그렇기 때문에 pop을 했을 경우에
-9999값으로 바뀌게 되는건 main의 stack이 아닌 f()의 stack이다. 그렇기
때문에 main 에서 stk.pop(z)는 main의 stack의 값을 반환하기 때문에 5가
출력된다.  하지만 얕은복사에서는 f()함수에서 stack객체가 main의
stack객체를 가리키게 된다. 그래서 f()에서 pop을 하면 main의 stack값이
-9999값으로 변화게 되고, main에 돌아와서 stk.pop(z)를 실행했을 때 바뀐
-9999값이 출력된다.
