
3. 클래스와 객체

 - class.ppt
 - classConstructorDestructor.ppt
 - classExamples.ppt
 - inline.ppt


3.1 클래스 / 3.2 C++ 클래스 만들기 / 3.3 객체 생성과 객체 활용 


- 객체 : 1) 상태
         2) 1)번 상태를 읽거나 쓰는 연산

- 클래스 : 객체의 유형(자료형, 타입)

- 클래스 선언, 멤버 함수 정의, 객체 선언 및 사용


  Q. classExamples.ppt


- 일반적으로

  객체의 상태는 외부로부터 숨기고
  객체가 제공하는 연산을 통해 객체를 다룬다.

  => C++의 추상 자료형(abstract data type)
           데이터 숨기기(data hiding)
           캡슐화(encapsulation)


  cf. C언어의 프로시저 추상화(procedure abstraction)
  

3.6 접근 지정 / 3.9 바람직한 C++ 프로그램 작성법 


3.4 생성자 / 3.5 소멸자


  1) 생성자 (Constructor)

    - 생성자의 정의
    - 초기화 섹션
    - 생성자 호출
          객체 선언(암시적 호출)
          명시적 호출로 객체 생성
    - 기본 생성자 (Default Constructor)


  Q. H1 ~ H6까지 채워넣기


    - 클래스 형 멤버 변수와 생성자 호출 순서
           클래스의 생성자 호출
                 클래스 형 멤버 변수의 생성자 호출
                 클래스 형 멤버 변수의 생성자 실행
           클래스의 생성자를 실행


  Q. 슬라이드 18의 H7


  Q. 슬라이드 15의 4가지 질문에 답하시오.


  (4장 실습문제 1번의 Color 클래스와 3장의 Circle 클래스를 조합한 예제)

  class Circle {
      int radius;
      Color color;
  public:
      Circle();
      Circle(int radius);
      Circle(Color c);
      Circle(int radius, Color c);
      ...
   };

   Circle::Circle() 
         : radius(1), color(0,0,0) {   }

   Circle::Circle(int r)
         : radius(r), color(0,0,0) { }
   
   Circle::Circle(int r, Color c)
         : radius(r), color(c) { }


   Circle c1;
   Circle c2(10);  // 반지름 10, 기본 컬러
   Circle c3(20, Color(255,255,255));  // 반지름 20, 검정색


3.7 인라인 함수

  Q. 인라인 멤버 함수를 만드는 방법 두가지?


  Q. 인라인 함수/멤버 함수의 장점과 단점?


3.8 C++ 구조체

  - C++에서 구조체는 클래스와 비슷한 기능을 제공하지만,
    원칙적으로 구조체에 담긴 데이터는 공개할 의도이고
    클래스의 객체에 담긴 데이터는 숨길(연산으로만 공개할) 의도이다.





        


